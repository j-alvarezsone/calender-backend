{"version":3,"sources":["redux/types/types.js","redux/reducers/auth/authReducer.js","redux/reducers/calender/calenderReducer.js","redux/reducers/ui/uiReducer.js","redux/reducers/rootReducer.js","redux/store/store.js","hooks/useForm.js","helpers/fetch.js","redux/actions/calender/events.js","redux/actions/auth/auth.js","components/auth/LoginScreen.jsx","components/ui/CustomIcon.jsx","components/ui/Navbar.jsx","helpers/calender-messages-es.js","components/calender/CalenderEvent.jsx","helpers/modalCustomStyle.js","redux/actions/ui/ui.js","components/calender/CalendarModal.jsx","components/ui/AddNewFab.jsx","components/ui/DeleteEventFab.jsx","components/calender/CalenderScreen.jsx","components/ui/Spinner.jsx","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalenderApp.jsx","index.js"],"names":["types","INITIAL_STATE","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calender","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","CustomIcon","Navbar","useSelector","onClick","enMessages","previous","next","CalenderEvent","event","title","customStyles","content","top","left","right","bottom","marginRight","transform","uiOpenModal","Modal","setAppElement","now","moment","minutes","seconds","add","nowPlus1","clone","initEvent","notes","start","toDate","end","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","_id","startAddNew","selected","startDate","selectsStart","isClearable","showTimeSelect","dateFormat","timeFormat","placeholderText","maxDate","minDate","selectsEnd","autoComplete","rows","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalenderScreen","lastView","setLastView","startAccessor","endAccessor","messages","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","eventSetActive","onView","onSelectSlot","selectable","view","components","Spinner","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalenderApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1504935e.chunk.js","sourcesContent":["export const types = {\n  uiOpenModal: '[ui] Open modal',\n  uiCloseModal: '[ui] Close modal',\n\n  // calender\n  eventSetActive: '[event] Set active',\n  eventStartAddNew: '[event] Start add new',\n  eventAddNew: '[event] Add new',\n  eventClearActive: '[event] Clear active event',\n  eventUpdated: '[event] Updated event',\n  eventDeleted: '[event] Delete event',\n  eventLoaded: '[event] Event loaded',\n  eventLogout: '[event] Event logout',\n\n  // auth\n  authCheckingFinish: '[auth] Finish checking login state',\n  authStartLogin: '[auth] Start login',\n  authLogin: '[auth] login',\n  authStartRegister: '[auth] Start register',\n  authStartTokenRenew: '[auth] Start token renew',\n  authLogout: '[auth] Logout',\n};\n","import { types } from '../../types/types';\n\nconst INITIAL_STATE = {\n  checking: true,\n  // uid: null,\n  // name: null,\n};\n\nexport const authReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.authLogin:\n      return {\n        ...state,\n        ...action.payload,\n        checking: false,\n      };\n\n    case types.authCheckingFinish:\n      return {\n        ...state,\n        checking: false,\n      };\n\n    case types.authLogout:\n      return {\n        checking: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { types } from '../../types/types';\n\n//  {\n//       id: new Date().getTime(),\n//       title: 'Cumpleaños del jefe',\n//       start: moment().toDate(),\n//       end: moment().add(2, 'hour').toDate(),\n//       notes: 'Comprar el pastel',\n//       user: {\n//         _id: '123',\n//         name: 'jorge',\n//       },\n//     },\n\nconst INITIAL_STATE = {\n  events: [],\n  activeEvent: null,\n};\n\nexport const calenderReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.eventSetActive:\n      return {\n        ...state,\n        activeEvent: action.payload,\n      };\n\n    case types.eventAddNew:\n      return {\n        ...state,\n        events: [...state.events, action.payload],\n      };\n\n    case types.eventClearActive:\n      return {\n        ...state,\n        activeEvent: null,\n      };\n\n    case types.eventUpdated:\n      return {\n        ...state,\n        events: state.events.map((e) => (e.id === action.payload.id ? action.payload : e)),\n      };\n\n    case types.eventDeleted:\n      return {\n        ...state,\n        events: state.events.filter((e) => e.id !== state.activeEvent.id),\n        activeEvent: null,\n      };\n\n    case types.eventLoaded:\n      return {\n        ...state,\n        events: [...action.payload],\n      };\n\n    case types.eventLogout:\n      return {\n        ...INITIAL_STATE,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { types } from '../../types/types';\n\nconst INITIAL_STATE = {\n  modalOpen: false,\n};\n\nexport const uiReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true,\n      };\n\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { authReducer } from './auth/authReducer';\nimport { calenderReducer } from './calender/calenderReducer';\nimport { uiReducer } from './ui/uiReducer';\n\nexport const rootReducer = combineReducers({\n  ui: uiReducer,\n  calender: calenderReducer,\n  auth: authReducer,\n});\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n","import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = () => {\n    setValues(initialState);\n  };\n\n  const handleInputChange = ({ target }) => {\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    });\n  };\n\n  return [values, handleInputChange, reset];\n};\n","const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchWithoutToken = (endpoint, data, method = 'GET') => {\n  const url = `${baseUrl}/${endpoint}`; // localhost:8000/api/endpoint\n\n  if (method === 'GET') {\n    return fetch(url);\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n  }\n};\n\nconst fetchWithToken = (endpoint, data, method = 'GET') => {\n  const url = `${baseUrl}/${endpoint}`; // localhost:8000/api/endpoint\n  const token = localStorage.getItem('token') || '';\n\n  if (method === 'GET') {\n    return fetch(url, {\n      method,\n      headers: {\n        'x-token': token,\n      },\n    });\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n        'x-token': token,\n      },\n      body: JSON.stringify(data),\n    });\n  }\n};\n\nexport { fetchWithoutToken, fetchWithToken };\n","import Swal from 'sweetalert2';\nimport { fetchWithToken } from '../../../helpers/fetch';\n// import { prepareEvents } from '../../../helpers/prepareEvents';\nimport { types } from '../../types/types';\n\nexport const startAddNew = (event) => {\n  return async (dispatch, getState) => {\n    const { uid, name } = getState().auth;\n    try {\n      const resp = await fetchWithToken('events', event, 'POST');\n      const body = await resp.json();\n\n      if (body.ok) {\n        event.id = body.event.id;\n        event.user = {\n          _id: uid,\n          name: name,\n        };\n        dispatch(eventAddNew(event));\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n\nconst eventAddNew = (e) => ({\n  type: types.eventAddNew,\n  payload: e,\n});\n\nexport const eventSetActive = (e) => ({\n  type: types.eventSetActive,\n  payload: e,\n});\n\nexport const eventClearActiveEvent = () => ({\n  type: types.eventClearActive,\n});\n\nexport const eventStartUpdate = (event) => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\n      const body = await resp.json();\n\n      if (body.ok) {\n        dispatch(eventUpdated(event));\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n\nconst eventUpdated = (e) => ({\n  type: types.eventUpdated,\n  payload: e,\n});\n\nexport const eventStartDelete = () => {\n  return async (dispatch, getState) => {\n    const { id } = getState().calender.activeEvent;\n    try {\n      const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE');\n      const body = await resp.json();\n\n      if (body.ok) {\n        dispatch(eventDeleted());\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n\nconst eventDeleted = () => ({\n  type: types.eventDeleted,\n});\n\nexport const eventStartLoading = () => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchWithToken('events');\n      const body = await resp.json();\n\n      // const events = prepareEvents(body.events);\n\n      dispatch(eventLoaded(body.events));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n\nconst eventLoaded = (events) => ({\n  type: types.eventLoaded,\n  payload: events,\n});\n\nexport const eventLogout = () => ({\n  type: types.eventLogout,\n});\n","import Swal from 'sweetalert2';\r\nimport { fetchWithoutToken, fetchWithToken } from '../../../helpers/fetch';\r\nimport { types } from '../../types/types';\r\nimport { eventLogout } from '../calender/events';\r\n\r\nexport const startLogin = (email, password) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchWithoutToken('auth', { email, password }, 'POST');\r\n    const body = await resp.json();\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        }),\r\n      );\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error');\r\n    }\r\n  };\r\n};\r\n\r\nexport const startRegister = (email, password, name) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchWithoutToken('auth/new', { email, password, name }, 'POST');\r\n    const body = await resp.json();\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        }),\r\n      );\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error');\r\n    }\r\n  };\r\n};\r\n\r\nexport const startChecking = () => {\r\n  return async (dispatch) => {\r\n    const isCurrentToken = !!(localStorage.getItem('token') || '');\r\n    if (!isCurrentToken) {\r\n      dispatch(checkingFinish());\r\n      return;\r\n    }\r\n\r\n    const resp = await fetchWithToken('auth/renew');\r\n    const body = await resp.json();\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        }),\r\n      );\r\n    } else {\r\n      dispatch(checkingFinish());\r\n    }\r\n  };\r\n};\r\n\r\nconst checkingFinish = () => ({\r\n  type: types.authCheckingFinish,\r\n});\r\n\r\nconst login = (user) => ({\r\n  type: types.authLogin,\r\n  payload: user,\r\n});\r\n\r\nexport const startLogout = () => {\r\n  return (dispatch) => {\r\n    localStorage.clear();\r\n    dispatch(eventLogout());\r\n    dispatch(logout());\r\n  };\r\n};\r\n\r\nconst logout = () => ({\r\n  type: types.authLogout,\r\n});\r\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { useForm } from '../../hooks/useForm';\nimport { startLogin, startRegister } from '../../redux/actions/auth/auth';\nimport './login.css';\n\nexport const LoginScreen = () => {\n  const dispatch = useDispatch();\n\n  const [formLoginValues, handleLoginInputChange] = useForm({\n    lEmail: '',\n    lPassword: '',\n  });\n\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\n    rName: '',\n    rEmail: '',\n    rPassword: '',\n    rPassword2: '',\n  });\n\n  const { lEmail, lPassword } = formLoginValues;\n  const { rName, rEmail, rPassword, rPassword2 } = formRegisterValues;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    dispatch(startLogin(lEmail, lPassword));\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    if (rPassword !== rPassword2) {\n      return Swal.fire('Error', 'The password must be the same', 'error');\n    }\n    dispatch(startRegister(rEmail, rPassword, rName));\n  };\n\n  return (\n    <div className='container login-container'>\n      <div className='row'>\n        <div className='col-md-6 login-form-1'>\n          <h3>Entry</h3>\n          <form onSubmit={handleLogin}>\n            <div className='form-group'>\n              <input\n                type='text'\n                className='form-control'\n                placeholder='Email'\n                name='lEmail'\n                value={lEmail}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className='form-group'>\n              <input\n                type='password'\n                className='form-control'\n                placeholder='Contraseña'\n                name='lPassword'\n                value={lPassword}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className='form-group'>\n              <input type='submit' className='btnSubmit' value='Login' />\n            </div>\n          </form>\n        </div>\n\n        <div className='col-md-6 login-form-2'>\n          <h3>Register</h3>\n          <form onSubmit={handleRegister}>\n            <div className='form-group'>\n              <input\n                type='text'\n                className='form-control'\n                placeholder='Name'\n                name='rName'\n                value={rName}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className='form-group'>\n              <input\n                type='email'\n                className='form-control'\n                placeholder='Email'\n                name='rEmail'\n                value={rEmail}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className='form-group'>\n              <input\n                type='password'\n                className='form-control'\n                placeholder='Password'\n                name='rPassword'\n                value={rPassword}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className='form-group'>\n              <input\n                type='password'\n                className='form-control'\n                placeholder='Confirm password'\n                name='rPassword2'\n                value={rPassword2}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className='form-group'>\n              <input type='submit' className='btnSubmit' value='Create account' />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const CustomIcon = ({ className }) => {\n  return (\n    <>\n      <i className={className}></i>\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../redux/actions/auth/auth';\nimport { CustomIcon } from './CustomIcon';\n\nexport const Navbar = () => {\n  const { name } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(startLogout());\n  };\n  return (\n    <div className='navbar navbar-dark bg-dark mb-4'>\n      <span className='navbar-brand'>{name}</span>\n      <button className='btn btn-outline-danger' onClick={handleLogout}>\n        <CustomIcon className={'fas fa-sign-out-alt'} />\n        <span> Logout</span>\n      </button>\n    </div>\n  );\n};\n","export const esMessages = {\n  allDay: 'Todo el día',\n  previous: '<',\n  next: '>',\n  today: 'Hoy',\n  month: 'Mes',\n  week: 'Semana',\n  day: 'Día',\n  agenda: 'Agenda',\n  date: 'Fecha',\n  time: 'Hora',\n  event: 'Evento',\n  noEventsInRange: 'No hay eventos en este rango',\n  showMore: (total) => `+ Ver más (${total})`,\n};\n\nexport const enMessages = {\n  previous: '<',\n  next: '>',\n};\n","import React from 'react';\n\nexport const CalenderEvent = ({ event }) => {\n  const { title, user } = event;\n\n  return (\n    <div>\n      <strong>{title}</strong>\n      <strong> - {user.name}</strong>\n    </div>\n  );\n};\n","export const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n","import { types } from '../../types/types';\n\nexport const uiOpenModal = () => ({\n  type: types.uiOpenModal,\n});\n\nexport const uiCloseModal = () => ({\n  type: types.uiCloseModal,\n});\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { customStyles } from '../../helpers/modalCustomStyle';\r\nimport { CustomIcon } from '../ui/CustomIcon';\r\n\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../redux/actions/ui/ui';\r\nimport { eventClearActiveEvent, eventStartUpdate, startAddNew } from '../../redux/actions/calender/events';\r\n\r\nModal.setAppElement('#root');\r\nconst now = moment().minutes(0).seconds(0).add(0, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n  title: '',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end: nowPlus1.toDate(),\r\n};\r\nexport const CalendarModal = () => {\r\n  const [dateStart, setDateStart] = useState(now.toDate());\r\n  const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n  const [titleValid, setTitleValid] = useState(true);\r\n  const [formValues, setFormValues] = useState(initEvent);\r\n\r\n  const { modalOpen } = useSelector((state) => state.ui);\r\n  const { activeEvent } = useSelector((state) => state.calender);\r\n  const dispatch = useDispatch();\r\n\r\n  const { title, notes, start, end } = formValues;\r\n\r\n  useEffect(() => {\r\n    if (activeEvent) {\r\n      setFormValues(activeEvent);\r\n    } else {\r\n      setFormValues(initEvent);\r\n    }\r\n  }, [activeEvent, setFormValues]);\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  // Modal\r\n  const closeModal = () => {\r\n    dispatch(uiCloseModal());\r\n    dispatch(eventClearActiveEvent());\r\n    setFormValues(initEvent);\r\n  };\r\n\r\n  // DatePicker\r\n  const handleStartDateChange = (e) => {\r\n    setDateStart(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      start: e,\r\n    });\r\n  };\r\n\r\n  const handleEndDateChange = (e) => {\r\n    setDateEnd(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      end: e,\r\n    });\r\n  };\r\n\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    const momentStart = moment(start);\r\n    const momentEnd = moment(end);\r\n    // la fecha de inicio si es igual o está después de la fecha de financiación, esto es un error\r\n    if (momentStart.isSameOrAfter(momentEnd)) {\r\n      return Swal.fire('Error', 'The end date must be greater than the start date', 'error');\r\n    }\r\n\r\n    if (title.trim().length < 2) {\r\n      return setTitleValid(false);\r\n    }\r\n\r\n    if (activeEvent) {\r\n      dispatch(eventStartUpdate(formValues));\r\n    } else {\r\n      dispatch(startAddNew(formValues));\r\n    }\r\n\r\n    setTitleValid(true);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={modalOpen}\r\n      // onAfterOpen={afterOpenModal}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}\r\n      closeTimeoutMS={200}\r\n      className='modal'\r\n      overlayClassName='modal-fondo'\r\n    >\r\n      <h2>{activeEvent ? 'Edit event' : 'New event '} </h2>\r\n      <hr />\r\n      <form className='container' onSubmit={handleSubmitForm}>\r\n        <div className='form-group'>\r\n          <label>Start date and time</label>\r\n          <br />\r\n          <DatePicker\r\n            onChange={handleStartDateChange}\r\n            selected={start}\r\n            startDate={dateStart}\r\n            selectsStart\r\n            isClearable\r\n            showTimeSelect\r\n            dateFormat='MMMM d, yyyy h:mm aa'\r\n            timeFormat='HH:mm'\r\n            placeholderText='Choice your start date and time'\r\n            maxDate={dateEnd}\r\n            className='form-control'\r\n          />\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <label>Date and end time</label>\r\n          <DatePicker\r\n            onChange={handleEndDateChange}\r\n            selected={end}\r\n            minDate={dateStart}\r\n            selectsEnd\r\n            startDate={start}\r\n            showTimeSelect\r\n            dateFormat='MMMM d, yyyy h:mm aa'\r\n            isClearable\r\n            placeholderText='Choice your end date and time'\r\n            className='form-control'\r\n          />\r\n        </div>\r\n\r\n        <hr />\r\n        <div className='form-group'>\r\n          <label>Title and notes</label>\r\n          <input\r\n            type='text'\r\n            className={`form-control ${!titleValid && 'is-invalid'}`}\r\n            placeholder='Event title'\r\n            name='title'\r\n            value={title}\r\n            onChange={handleInputChange}\r\n            autoComplete='off'\r\n          />\r\n          <small id='emailHelp' className='form-text text-muted'>\r\n            A short description\r\n          </small>\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <textarea\r\n            type='text'\r\n            className='form-control'\r\n            placeholder='Notes'\r\n            rows='3'\r\n            name='notes'\r\n            value={notes}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n          <small id='emailHelp' className='form-text text-muted'>\r\n            Additional Information\r\n          </small>\r\n        </div>\r\n\r\n        <button type='submit' className='btn btn-outline-primary btn-block'>\r\n          <CustomIcon className={'far fa-save'} />\r\n          <span> Save</span>\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../redux/actions/ui/ui';\nimport { CustomIcon } from './CustomIcon';\n\nexport const AddNewFab = () => {\n  const dispatch = useDispatch();\n  const handleOpenModal = () => {\n    dispatch(uiOpenModal());\n  };\n  return (\n    <button className='btn btn-primary fab' onClick={handleOpenModal}>\n      <CustomIcon className={'fas fa-plus'} />\n    </button>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../redux/actions/calender/events';\nimport { CustomIcon } from './CustomIcon';\n\nexport const DeleteEventFab = () => {\n  const dispatch = useDispatch();\n\n  const handleDeleteEvent = () => {\n    dispatch(eventStartDelete());\n  };\n\n  return (\n    <button className='btn btn-danger fab-danger' onClick={handleDeleteEvent}>\n      <CustomIcon className={'fas fa-trash'} />\n      <span> Delete event</span>\n    </button>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Navbar } from '../ui/Navbar';\n\nimport moment from 'moment';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { enMessages } from '../../helpers/calender-messages-es';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { CalenderEvent } from './CalenderEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../redux/actions/ui/ui';\nimport {\n  eventClearActiveEvent,\n  eventSetActive,\n  eventStartLoading,\n} from '../../redux/actions/calender/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\n\nexport const CalenderScreen = () => {\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n  const dispatch = useDispatch();\n  const { events, activeEvent } = useSelector((state) => state.calender);\n  const { uid } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    dispatch(eventStartLoading());\n  }, [dispatch]);\n\n  const onDoubleClick = () => {\n    dispatch(uiOpenModal());\n  };\n\n  const onSelectEvent = (e) => {\n    dispatch(eventSetActive(e));\n  };\n\n  const onViewChange = (e) => {\n    setLastView(e);\n    localStorage.setItem('lastView', e);\n  };\n\n  const onSelectSlot = (e) => {\n    dispatch(eventClearActiveEvent(e));\n  };\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    const style = {\n      backgroundColor: uid === event.user._id ? '#367CF7' : '#465660',\n      borderRadius: '0px',\n      opacity: 0.8,\n      display: 'block',\n      color: 'white',\n    };\n\n    return {\n      style,\n    };\n  };\n\n  return (\n    <div className='calender-screen'>\n      <Navbar />\n\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor='start'\n        endAccessor='end'\n        messages={enMessages}\n        eventPropGetter={eventStyleGetter}\n        onDoubleClickEvent={onDoubleClick}\n        onSelectEvent={onSelectEvent}\n        onView={onViewChange}\n        onSelectSlot={onSelectSlot}\n        selectable={true}\n        view={lastView}\n        components={{\n          event: CalenderEvent,\n        }}\n      />\n      <AddNewFab />\n      {activeEvent && <DeleteEventFab />}\n\n      <CalendarModal />\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Spinner = () => {\n  return (\n    <div className='center'>\n      <div className='lds-ring'>\n        <div />\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router';\n\nexport const PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) => (isAuthenticated ? <Component {...props} /> : <Redirect to='/login' />)}\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router';\n\nexport const PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) => (isAuthenticated ? <Redirect to='/' /> : <Component {...props} />)}\n    />\n  );\n};\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalenderScreen } from '../components/calender/CalenderScreen';\nimport { Spinner } from '../components/ui/Spinner';\nimport { startChecking } from '../redux/actions/auth/auth';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n  const { checking, uid } = useSelector((state) => state.auth);\n  useEffect(() => {\n    dispatch(startChecking());\n  }, [dispatch]);\n\n  if (checking) {\n    return <Spinner />;\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute exact path='/login' component={LoginScreen} isAuthenticated={!!uid} />\n          <PrivateRoute exact path='/' component={CalenderScreen} isAuthenticated={!!uid} />\n\n          <Redirect to='/' />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store/store';\nimport { AppRouter } from './router/AppRouter';\n\nexport const CalenderApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { CalenderApp } from './CalenderApp';\n\nimport './styles.css';\n\nReactDOM.render(<CalenderApp />, document.getElementById('root'));\n"],"sourceRoot":""}